<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:ws="http://www.mulesoft.org/schema/mule/ws" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit" xmlns:context="http://www.springframework.org/schema/context" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.mulesoft.org/schema/mule/ws http://www.mulesoft.org/schema/mule/ws/current/mule-ws.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd">
    <http:listener-config name="httpListenerConfig" host="0.0.0.0" port="${http.port}" doc:name="HTTP Listener Configuration"/>
    <apikit:config name="apiConfig" raml="api.raml" consoleEnabled="false" doc:name="Router"/>
    <context:property-placeholder location="api.properties" />
    <http:request-config name="apirouter" host="apirouter.apps-local.wwt.com" port="80" doc:name="HTTP Request Configuration"/>
    <flow name="api-main">
        <http:listener config-ref="httpListenerConfig" path="/api/*" doc:name="HTTP"/>
        <apikit:router config-ref="apiConfig" doc:name="APIkit Router"/>
        <exception-strategy ref="apiKitGlobalExceptionMapping" doc:name="Reference Exception Strategy"/>
    </flow>
    <flow name="api-console">
        <http:listener config-ref="httpListenerConfig" path="/console/*" doc:name="HTTP"/>
        <apikit:console config-ref="apiConfig" doc:name="APIkit Console"/>
    </flow>
    <flow name="get:/aggregates:apiConfig">
        <set-variable variableName="usernames" value="#[message.inboundProperties.'http.query.params'.usernames.split(&quot;,&quot;)]" doc:name="Split usernames query param into `usernames` variable"/>
        <set-payload value="{
  &quot;found&quot;: [],
  &quot;missing&quot;: []
}" mimeType="application/json" doc:name="Create Accumulator Payload Structure"/>
        <foreach collection="usernames" counterVariableName="usernameCounter" doc:name="For Each Username">
            <set-variable variableName="username" value="#[usernames[usernameCounter - 1]]" doc:name="Set Username for Iteration"/>
            <http:request config-ref="apirouter" path="/users" method="GET" doc:name="Fetch User from Userservice" metadata:id="41f93d60-2caa-4bfd-90a7-a2c09d2ec3ef">
                <http:request-builder>
                    <http:query-param paramName="userName" value="#[username]"/>
                    <http:header headerName="remote_user" value="loadtestuser1"/>
                </http:request-builder>
            </http:request>
            <json:json-to-object-transformer returnClass="java.lang.Object" doc:name="JSON to Object"/>
            <choice doc:name="User found">
                <when expression="#[payload.size() == 1]">
                    <tracking:custom-event event-name="Found User Event" doc:name="Found User Event">
                        <tracking:meta-data key="userName" value="#[payload[0].userName]"/>
                        <tracking:meta-data key="id" value="#[payload[0].id]"/>
                    </tracking:custom-event>
                    <json:object-to-json-transformer mimeType="application/json" doc:name="Object to JSON"/>
                    <dw:transform-message doc:name="Transform Message" metadata:id="e5e3d719-e36e-4cc4-894a-ff85ac1040ce">
                        <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	"id": payload[0].id,
	"username": payload[0].userName,
	"firstName": payload[0].firstName,
	"lastName": payload[0].lastName,
	"joinedName": payload[0].firstName ++ " " ++ payload[0].lastName
}]]></dw:set-payload>
                    </dw:transform-message>
                    <logger message="#[payload]" level="INFO" doc:name="Logger"/>
                </when>
                <when expression="#[payload.size() &gt; 1]">
                    <set-property propertyName="http.status" value="#[400]" doc:name="Too Many Users Found"/>
                    <set-payload value="{ &quot;message&quot;: &quot;Assertion failure: too many users found.&quot; }" doc:name="Set Response Payload"/>
                    <set-property propertyName="http.status" value="#[500]" doc:name="Set 500 Status Code"/>
                </when>
                <otherwise>
                    <set-payload value="{ &quot;message&quot;: &quot;user not found&quot; }" doc:name="Set User Not Found"/>
                    <set-property propertyName="http.status" value="#[404]" doc:name="Set 404 Status Code"/>
                </otherwise>
            </choice>
        </foreach>
    </flow>
    <apikit:mapping-exception-strategy name="apiKitGlobalExceptionMapping">
        <apikit:mapping statusCode="404">
            <apikit:exception value="org.mule.module.apikit.exception.NotFoundException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Resource not found&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="405">
            <apikit:exception value="org.mule.module.apikit.exception.MethodNotAllowedException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Method not allowed&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="415">
            <apikit:exception value="org.mule.module.apikit.exception.UnsupportedMediaTypeException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Unsupported media type&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="406">
            <apikit:exception value="org.mule.module.apikit.exception.NotAcceptableException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Not acceptable&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
        <apikit:mapping statusCode="400">
            <apikit:exception value="org.mule.module.apikit.exception.BadRequestException" />
            <set-property propertyName="Content-Type" value="application/json" doc:name="Property"/>
            <set-payload value="{ &quot;message&quot;: &quot;Bad request&quot; }" doc:name="Set Payload"/>
        </apikit:mapping>
    </apikit:mapping-exception-strategy>
</mule>
